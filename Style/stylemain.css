/* -    -   -   -   -
the 4 main classes of a page
-   -   -   -   - */
body{
    background-image: url(../Images/MintBlock32px.svg);
    background-repeat: repeat;
    background-position-x: center;
    /* giving the body a margin of 0 makes every future element hug the site borders */
    margin: 0;
    text-shadow: 0 0 10px var(--mintlightest-color) ;
    /* setting height to vh so it fills the given screen space. */
    /* remember spacing is the sum of all parts one cannot use more than 100% of the space.
    so developing or finding a style for what elements should have box in a box. boxes should auto align themselves inside the container they stay in.
    but boxes should not auto elements around themselves. focusing the use of auto in one direction either outward or inward else empty or unwanted results may happen i think */
    text-align: center;
    /* should fill body with as much details i want as not to repeat myself */
    display: flex;
    flex-flow: column;
    min-height: 100vh;
}
header{
    position: sticky;
    top: 0;
    z-index: 1;
}
main{
    flex: 1;
    margin: auto;
    position: relative;
    z-index: 0;
}
footer{
    border-top: dotted 5px var(--mintdarkest-color);
    background-color: var(--mintdark-color);
    color: var(--mintlightest-color);
}
/* -    -   -   -   -
Nav bar styling
-   -   -   -   - */
#nav-bar{
    padding-top: 20px;
    display: inline-flex;
    flex-direction: row;
    justify-content: space-evenly;
    margin: 20px;
    position: relative;
}
.dropdown-menu{position: relative;}
.dropdown-label{color: var(--mintdark-color);}
.dropdown-content{
    transform: translateX(-25px);
    margin-top: 10px;
    padding: 12px;
    border-top: none;
    visibility: hidden;
    position: absolute;
    border: var(--mintdarkest-color) 15px groove;
    background-color: var(--mint-color);
    border-top: none;
    opacity: 0;
    transition: 750ms all;
    display: flex;
    flex-direction: column;
    transform: translateZ(1);
}
.dropdown-menu:hover .dropdown-content{
    opacity: 1;
    visibility: visible;
}
.nav-el{
    background-color: var(--mint-color);
    padding: 10px;
    border: var(--mintdarkest-color) 15px groove;
    border-bottom: var(--mintdarkest-color) 15px ridge;
}
.nav-el:first-child{
    border-radius: 5rem 0 0 5rem;
    border-bottom: var(--mintdarkest-color) 15px ridge;
}
.nav-el:last-child{
    border-radius: 0 5rem 5rem 0;
    border-right: var(--mintdarkest-color) 15px ridge;
    border-left: var(--mintdarkest-color) 15px ridge;
}
/* remember to check for only child last or else it will accept last child as the correct choice. as always order of operation matters in all programming */
.nav-el:only-child{
    border-radius: 5rem;
    border-width: 20px;
}
.dropdown-menu{border-bottom: none;}
/* -    -   -   -   -
skill icon section
-   -   -   -   - */
#skill-container{
    display: flex;
}
#skill-text{
    align-self: center;
    padding: 3rem;
}
#skill-icons{
    display: grid;
    grid-template-columns: auto auto auto;
    gap: 1rem;
}
.skill-icon{
}
.skill-icon img{
    max-width: 100px;
}
/* -    -   -   -   -
my css variables
-   -   -   -   - */
:root{
    --mintdarkest-color: rgb(97,165,117);
    --mintdark-color: rgb(112,183,133);
    --mint-color: rgb(135,209,159);
    --mintlight-color: rgb(151,230,179);
    --mintlightest-color: rgb(182,243,204);
    --mintborder-border: groove 5px var(--mintdarkest-color);
}

/* -    -   -   -   -
my sitewide classes
-   -   -   -   - */
section{
    margin: 0 auto;
    width: fit-content;
    padding: 10px;
    background-color: var(--mintdark-color);
    border: var(--mintborder-border);
}
.main-text{
    /* testing ground for text align */
    text-align: left;
}
/* -    -   -   -   -
fancy links
-   -   -   -   - */
.link-el, .link-el:link .link-el:visited{
    background-color: aquamarine;
    color: black;
    padding: 10px;
    text-align: center;
    text-decoration: none;
    border-radius: 5rem 0;
}
.link-el:hover, .link-el:active{
    background-color: var(--mintdarkest-color);
    border-radius: 0 5rem;
}
/* -    -   -   -   -   
Parallax dangerzone
-   -   -   -   - */
.parallax-item{
    position: relative;
    background-attachment: fixed;
    background-position-x: center;
}
.chocolatebox, .greenstairs, .purplebox{
    min-height: 128px;
    width: auto;
}
.chocolatebox{
    background-image: url(../Images/ChocolateBox32.svg);
}
.greenstairs{
    background-image: url(../Images/GreenStairs32.svg);
}
.purplebox{
    background-image: url(../Images/PurpleBox32.svg);
}
/* this removes the styling on the input fields.
removes the gizmo thing on the right side */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
/* Firefox */
input[type=number] {
  -moz-appearance: textfield;
}
@media only screen and (max-width: 900px) {
    /* phones */
    #skill-container{
        flex-direction: column;
    }
    .skill-icon img{
        max-width: 50px;
    }
    #skill-icons{
        display: grid;
        grid-template-columns: auto auto auto;
        gap: 0;
    }
  }